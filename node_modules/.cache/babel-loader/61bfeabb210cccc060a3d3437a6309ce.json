{"ast":null,"code":"import { AppleAPI, BasketAPI, DescriptionAPI, FeedBackAPI, XiaomiAPI } from \"../API/API\";\nconst SET_APPLE = \"SET_APPLE\";\nconst SET_XIAOMI = \"SET_XIAOMI\";\nconst SET_ONE_APPLE = \"SET_ONE_APPLE\";\nconst SET_ONE_XIAOMI = \"SET_ONE_XIAOMI\";\nconst SET_DESCRIPTION = \"SET_DESCRIPTION\";\nconst SET_BASKET = \"SET_BASKET\";\nconst ADD_IN_BASKET = \"ADD_IN_BASKET\";\nconst DELETE_IN_BASKET = \"DELETE_IN_BASKET\";\nconst COUNT_BASKET = \"COUNT_BASKET\";\nconst SEARCH = \"SEARCH\";\nconst SEARCH_BOX = \"SEARCH_BOX\";\nconst COUNT_BASKET_PRODUCTS = \"COUNT_BASKET_PRODUCTS\";\nconst SET_FEEDBACK = \"SETFEEDBACK\";\nconst ADD_FEEDBACK = \"ADD_FEEDBACK\";\nconst INITIALIZE_FEEDBACK = \"INITIALIZE_FEEDBACK\";\nlet initState = {\n  apple: [],\n  xiaomi: [],\n  oneApple: [],\n  oneXiaomi: [],\n  description: [],\n  basket: [],\n  search: \"\",\n  searchBox: \"\",\n  countBasketProducts: 0,\n  feedback: [],\n  initializeFeedback: true\n};\n\nconst Reduser = (state = initState, action) => {\n  switch (action.type) {\n    case SET_APPLE:\n      {\n        return { ...state,\n          apple: action.apple\n        };\n      }\n\n    case SET_XIAOMI:\n      {\n        return { ...state,\n          xiaomi: action.xiaomi\n        };\n      }\n\n    case SET_ONE_APPLE:\n      {\n        return { ...state,\n          oneXiaomi: [],\n          oneApple: action.oneApple\n        };\n      }\n\n    case SET_ONE_XIAOMI:\n      {\n        return { ...state,\n          oneApple: [],\n          oneXiaomi: action.oneXiaomi\n        };\n      }\n\n    case SET_DESCRIPTION:\n      {\n        return { ...state,\n          description: action.description\n        };\n      }\n\n    case SET_BASKET:\n      {\n        return { ...state,\n          basket: action.basket\n        };\n      }\n\n    case ADD_IN_BASKET:\n      {\n        return { ...state,\n          basket: [{\n            name: action.name,\n            photo: action.photo,\n            price: action.price,\n            count: 1\n          }]\n        };\n      }\n\n    case DELETE_IN_BASKET:\n      {\n        return { ...state,\n          basket: [...action.id]\n        };\n      }\n\n    case COUNT_BASKET:\n      {\n        return { ...state,\n          basket: [...state.basket]\n        };\n      }\n\n    case SEARCH:\n      {\n        return { ...state,\n          search: action.search\n        };\n      }\n\n    case SEARCH_BOX:\n      {\n        return { ...state,\n          searchBox: action.searchBox\n        };\n      }\n\n    case COUNT_BASKET_PRODUCTS:\n      {\n        return { ...state,\n          countBasketProducts: action.countBasketProducts\n        };\n      }\n\n    case SET_FEEDBACK:\n      {\n        return { ...state,\n          feedback: action.feedback\n        };\n      }\n\n    case ADD_FEEDBACK:\n      {\n        return { ...state,\n          feedback: [{\n            name: action.name,\n            productId: action.id,\n            feedBack: action.feedBack,\n            rating: action.rating\n          }, ...state.feedback]\n        };\n      }\n\n    case INITIALIZE_FEEDBACK:\n      return { ...state,\n        initializeFeedback: action.isInit\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setApple = apple => ({\n  type: SET_APPLE,\n  apple\n});\nexport const setXiaomi = xiaomi => ({\n  type: SET_XIAOMI,\n  xiaomi\n});\nexport const setOneApple = oneApple => ({\n  type: SET_ONE_APPLE,\n  oneApple\n});\nexport const setOneXiaomi = oneXiaomi => ({\n  type: SET_ONE_XIAOMI,\n  oneXiaomi\n});\nexport const setDescription = description => ({\n  type: SET_DESCRIPTION,\n  description\n});\nexport const setBasket = basket => ({\n  type: SET_BASKET,\n  basket\n});\nexport const addInBasket = (name, photo, price) => ({\n  type: ADD_IN_BASKET,\n  name,\n  photo,\n  price\n});\nexport const deleteInBasket = id => ({\n  type: DELETE_IN_BASKET,\n  id\n});\nexport const countBasket = basket => ({\n  type: COUNT_BASKET,\n  basket\n});\nexport const searchAC = search => ({\n  type: SEARCH,\n  search\n});\nexport const searchBoxAC = searchBox => ({\n  type: SEARCH_BOX,\n  searchBox\n});\nexport const CountBasketProducts = countBasketProducts => ({\n  type: COUNT_BASKET_PRODUCTS,\n  countBasketProducts\n});\nexport const setFeedBack = feedback => ({\n  type: SET_FEEDBACK,\n  feedback\n});\nexport const addFeedBack = (name, id, feedBack, rating) => ({\n  type: ADD_FEEDBACK,\n  name,\n  id,\n  feedBack,\n  rating\n});\nexport const initializeFeedbackAC = isInit => ({\n  type: INITIALIZE_FEEDBACK,\n  isInit\n});\nexport const getAppleThunk = () => async dispatch => {\n  let data = await AppleAPI.getApple();\n  dispatch(setApple(data));\n};\nexport const getOneAppleThunk = id => async dispatch => {\n  let data = await AppleAPI.getOneApple(id);\n  dispatch(setOneApple(data));\n};\nexport const getXiaomiThunk = () => async dispatch => {\n  let data = await XiaomiAPI.getXiaomi();\n  dispatch(setXiaomi(data));\n};\nexport const getOneXiaomiThunk = id => async dispatch => {\n  let data = await XiaomiAPI.getOneXiaomi(id);\n  dispatch(setOneXiaomi(data));\n};\nexport const getDescriptionThunk = () => async dispatch => {\n  let data = await DescriptionAPI.getDescription();\n  dispatch(setDescription(data));\n};\nexport const getBasketThunk = () => async dispatch => {\n  let data = await BasketAPI.getBasket();\n  dispatch(setBasket(data));\n};\nexport const addInBasketThunk = (name, photo, price, id) => async dispatch => {\n  let data = await BasketAPI.addInBasket(name, photo, price, id);\n  dispatch(addInBasket(data.name, data.photo, data.price, data.id));\n};\nexport const deleteInBasketThunk = (id, delSmart) => async dispatch => {\n  await BasketAPI.deleteInBasket(id);\n  dispatch(deleteInBasket(delSmart.filter(d => d.id !== id)));\n};\nexport const countBasketThunk = (id, count) => async dispatch => {\n  let data = await BasketAPI.countBasket(id, count);\n  dispatch(countBasket(data));\n};\nexport const getFeedBackThunk = () => async dispatch => {\n  let data = await FeedBackAPI.getFeedBack();\n  dispatch(setFeedBack(data));\n};\nexport const addFeedBackThunk = (name, id, feedBack, rating) => async dispatch => {\n  let data = await FeedBackAPI.addFeedBack(name, id, feedBack, rating);\n  dispatch(addFeedBack(data.name, data.id, data.feedBack, data.rating));\n};\nexport const initializeFeedbackThunk = (name, id, feedBack, rating) => dispatch => {\n  let promise = dispatch(addFeedBackThunk(name, id, feedBack, rating));\n  Promise.all([promise]).then(() => {\n    dispatch(getFeedBackThunk());\n    dispatch(initializeFeedbackAC(true));\n  });\n};\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAppleThunk());\n  let promise2 = dispatch(getXiaomiThunk());\n  Promise.all([promise, promise2]).then(() => {\n    dispatch(initializeFeedbackAC(true));\n  });\n};\nexport const initializeApple = () => dispatch => {\n  let promise = dispatch(getAppleThunk());\n  Promise.all([promise]).then(() => {\n    dispatch(initializeFeedbackAC(true));\n  });\n};\nexport default Reduser;","map":{"version":3,"sources":["C:/Users/sqrt9/Desktop/react/projects/new-shop/src/Redux/Reduser.js"],"names":["AppleAPI","BasketAPI","DescriptionAPI","FeedBackAPI","XiaomiAPI","SET_APPLE","SET_XIAOMI","SET_ONE_APPLE","SET_ONE_XIAOMI","SET_DESCRIPTION","SET_BASKET","ADD_IN_BASKET","DELETE_IN_BASKET","COUNT_BASKET","SEARCH","SEARCH_BOX","COUNT_BASKET_PRODUCTS","SET_FEEDBACK","ADD_FEEDBACK","INITIALIZE_FEEDBACK","initState","apple","xiaomi","oneApple","oneXiaomi","description","basket","search","searchBox","countBasketProducts","feedback","initializeFeedback","Reduser","state","action","type","name","photo","price","count","id","productId","feedBack","rating","isInit","setApple","setXiaomi","setOneApple","setOneXiaomi","setDescription","setBasket","addInBasket","deleteInBasket","countBasket","searchAC","searchBoxAC","CountBasketProducts","setFeedBack","addFeedBack","initializeFeedbackAC","getAppleThunk","dispatch","data","getApple","getOneAppleThunk","getOneApple","getXiaomiThunk","getXiaomi","getOneXiaomiThunk","getOneXiaomi","getDescriptionThunk","getDescription","getBasketThunk","getBasket","addInBasketThunk","deleteInBasketThunk","delSmart","filter","d","countBasketThunk","getFeedBackThunk","getFeedBack","addFeedBackThunk","initializeFeedbackThunk","promise","Promise","all","then","initializeApp","promise2","initializeApple"],"mappings":"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","sourcesContent":["import {AppleAPI, BasketAPI, DescriptionAPI, FeedBackAPI, XiaomiAPI} from \"../API/API\";\r\n\r\nconst SET_APPLE = \"SET_APPLE\"\r\nconst SET_XIAOMI = \"SET_XIAOMI\"\r\nconst SET_ONE_APPLE = \"SET_ONE_APPLE\"\r\nconst SET_ONE_XIAOMI = \"SET_ONE_XIAOMI\"\r\nconst SET_DESCRIPTION = \"SET_DESCRIPTION\"\r\nconst SET_BASKET = \"SET_BASKET\"\r\nconst ADD_IN_BASKET = \"ADD_IN_BASKET\"\r\nconst DELETE_IN_BASKET = \"DELETE_IN_BASKET\"\r\nconst COUNT_BASKET = \"COUNT_BASKET\"\r\nconst SEARCH = \"SEARCH\"\r\nconst SEARCH_BOX = \"SEARCH_BOX\"\r\nconst COUNT_BASKET_PRODUCTS = \"COUNT_BASKET_PRODUCTS\"\r\nconst SET_FEEDBACK = \"SETFEEDBACK\"\r\nconst ADD_FEEDBACK = \"ADD_FEEDBACK\"\r\nconst INITIALIZE_FEEDBACK = \"INITIALIZE_FEEDBACK\"\r\n\r\n\r\nlet initState = {\r\n    apple: [],\r\n    xiaomi: [],\r\n    oneApple: [],\r\n    oneXiaomi: [],\r\n    description: [],\r\n    basket: [],\r\n    search: \"\",\r\n    searchBox: \"\",\r\n    countBasketProducts: 0,\r\n    feedback: [],\r\n    initializeFeedback: true\r\n}\r\n\r\n\r\nconst Reduser = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_APPLE: {\r\n            return {\r\n                ...state,\r\n                apple: action.apple\r\n            }\r\n        }\r\n        case SET_XIAOMI: {\r\n            return {\r\n                ...state,\r\n                xiaomi: action.xiaomi\r\n            }\r\n        }\r\n        case SET_ONE_APPLE: {\r\n            return {\r\n                ...state,\r\n                oneXiaomi: [],\r\n                oneApple: action.oneApple,\r\n\r\n            }\r\n        }\r\n        case SET_ONE_XIAOMI: {\r\n            return {\r\n                ...state,\r\n                oneApple: [],\r\n                oneXiaomi: action.oneXiaomi\r\n            }\r\n        }\r\n        case SET_DESCRIPTION: {\r\n            return {\r\n                ...state,\r\n                description: action.description\r\n            }\r\n        }\r\n        case SET_BASKET: {\r\n            return {\r\n                ...state,\r\n                basket: action.basket\r\n            }\r\n        }\r\n        case ADD_IN_BASKET: {\r\n            return {\r\n                ...state,\r\n                basket: [{\r\n                    name: action.name,\r\n                    photo: action.photo,\r\n                    price: action.price,\r\n                    count: 1\r\n                }]\r\n            }\r\n        }\r\n        case DELETE_IN_BASKET: {\r\n            return {\r\n                ...state,\r\n                basket: [...action.id]\r\n            }\r\n        }\r\n        case COUNT_BASKET: {\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket]\r\n            }\r\n        }\r\n        case SEARCH: {\r\n            return {\r\n                ...state,\r\n                search: action.search\r\n            }\r\n        }\r\n        case SEARCH_BOX: {\r\n            return {\r\n                ...state,\r\n                searchBox: action.searchBox\r\n            }\r\n        }\r\n        case COUNT_BASKET_PRODUCTS: {\r\n            return {\r\n                ...state,\r\n                countBasketProducts: action.countBasketProducts\r\n            }\r\n        }\r\n        case SET_FEEDBACK: {\r\n            return {\r\n                ...state,\r\n                feedback: action.feedback\r\n            }\r\n        }\r\n        case ADD_FEEDBACK: {\r\n            return {\r\n                ...state,\r\n                feedback: [{\r\n                    name: action.name,\r\n                    productId: action.id,\r\n                    feedBack: action.feedBack,\r\n                    rating: action.rating\r\n                }, ...state.feedback]\r\n            }\r\n        }\r\n        case INITIALIZE_FEEDBACK:\r\n                return {\r\n                    ...state,\r\n                    initializeFeedback: action.isInit\r\n                }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setApple = (apple) => ({type: SET_APPLE, apple})\r\nexport const setXiaomi = (xiaomi) => ({type: SET_XIAOMI, xiaomi})\r\nexport const setOneApple = (oneApple) => ({type: SET_ONE_APPLE, oneApple})\r\nexport const setOneXiaomi = (oneXiaomi) => ({type: SET_ONE_XIAOMI, oneXiaomi})\r\nexport const setDescription = (description) => ({type: SET_DESCRIPTION, description})\r\nexport const setBasket = (basket) => ({type: SET_BASKET, basket})\r\nexport const addInBasket = (name, photo, price) => ({type: ADD_IN_BASKET, name, photo, price})\r\nexport const deleteInBasket = (id) => ({type: DELETE_IN_BASKET, id})\r\nexport const countBasket = (basket) => ({type: COUNT_BASKET, basket})\r\nexport const searchAC = (search) => ({type: SEARCH, search})\r\nexport const searchBoxAC = (searchBox) => ({type: SEARCH_BOX, searchBox})\r\nexport const CountBasketProducts = (countBasketProducts) => ({type: COUNT_BASKET_PRODUCTS, countBasketProducts})\r\nexport const setFeedBack = (feedback) => ({type: SET_FEEDBACK, feedback})\r\nexport const addFeedBack = (name, id, feedBack, rating) => ({type: ADD_FEEDBACK, name, id, feedBack, rating})\r\nexport const initializeFeedbackAC = (isInit) => ({type: INITIALIZE_FEEDBACK,isInit})\r\n\r\n\r\nexport const getAppleThunk = () => async (dispatch) => {\r\n    let data = await AppleAPI.getApple();\r\n    dispatch(setApple(data))\r\n}\r\nexport const getOneAppleThunk = (id) => async (dispatch) => {\r\n    let data = await AppleAPI.getOneApple(id);\r\n    dispatch(setOneApple(data))\r\n}\r\nexport const getXiaomiThunk = () => async (dispatch) => {\r\n    let data = await XiaomiAPI.getXiaomi();\r\n    dispatch(setXiaomi(data))\r\n}\r\nexport const getOneXiaomiThunk = (id) => async (dispatch) => {\r\n    let data = await XiaomiAPI.getOneXiaomi(id);\r\n    dispatch(setOneXiaomi(data))\r\n}\r\nexport const getDescriptionThunk = () => async (dispatch) => {\r\n    let data = await DescriptionAPI.getDescription();\r\n    dispatch(setDescription(data))\r\n}\r\nexport const getBasketThunk = () => async (dispatch) => {\r\n    let data = await BasketAPI.getBasket();\r\n    dispatch(setBasket(data));\r\n}\r\nexport const addInBasketThunk = (name, photo, price, id) => async (dispatch) => {\r\n    let data = await BasketAPI.addInBasket(name, photo, price, id);\r\n    dispatch(addInBasket(data.name, data.photo, data.price, data.id))\r\n}\r\nexport const deleteInBasketThunk = (id, delSmart) => async (dispatch) => {\r\n    await BasketAPI.deleteInBasket(id);\r\n    dispatch(deleteInBasket(delSmart.filter(d => d.id !== id)))\r\n}\r\nexport const countBasketThunk = (id, count) => async (dispatch) => {\r\n    let data = await BasketAPI.countBasket(id, count);\r\n    dispatch(countBasket(data))\r\n}\r\nexport const getFeedBackThunk = () => async (dispatch) => {\r\n    let data = await FeedBackAPI.getFeedBack();\r\n    dispatch(setFeedBack(data))\r\n}\r\nexport const addFeedBackThunk = (name, id, feedBack, rating) => async (dispatch) => {\r\n    let data = await FeedBackAPI.addFeedBack(name, id, feedBack, rating);\r\n    dispatch(addFeedBack(data.name, data.id, data.feedBack, data.rating))\r\n}\r\n\r\n\r\nexport const initializeFeedbackThunk = (name, id, feedBack, rating) => (dispatch) => {\r\n    let promise = dispatch(addFeedBackThunk(name, id, feedBack, rating));\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(getFeedBackThunk());\r\n            dispatch(initializeFeedbackAC(true))\r\n        });\r\n}\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise =  dispatch(getAppleThunk());\r\n    let promise2 = dispatch(getXiaomiThunk())\r\n\r\n    Promise.all([promise,promise2])\r\n        .then(() => {\r\n            dispatch(initializeFeedbackAC(true))\r\n        });\r\n}\r\n\r\nexport const initializeApple = () => (dispatch) => {\r\n    let promise =  dispatch(getAppleThunk());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializeFeedbackAC(true))\r\n        });\r\n}\r\n\r\n\r\nexport default Reduser;"]},"metadata":{},"sourceType":"module"}