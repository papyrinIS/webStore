{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sqrt9\\\\Desktop\\\\react\\\\projects\\\\new-shop\\\\src\\\\Components\\\\Basket\\\\BasketContainer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Basket from \"./Basket\";\nimport { CountBasketProducts, countBasketThunk, deleteInBasketThunk, getBasketThunk } from \"../../Redux/Reduser\";\n\nconst BasketContainer = ({\n  basket,\n  deleteInBasketThunk,\n  countBasketThunk,\n  getBasketThunk,\n  countBasketProducts\n}) => {\n  const [Render, setRender] = useState(true);\n\n  const deleteSmart = id => {\n    const delSmart = basket;\n    deleteInBasketThunk(id, delSmart);\n  };\n\n  const CountBasket = (id, count) => {\n    if (count === 0) {\n      deleteSmart(id);\n      setRender(true);\n    } else {\n      countBasketThunk(id, count);\n      setRender(true);\n    }\n  };\n\n  useEffect(() => {\n    if (Render === true) {\n      getBasketThunk();\n      setRender(false);\n    }\n  }, [Render, getBasketThunk]);\n  return /*#__PURE__*/React.createElement(Basket, {\n    countBasketProducts: countBasketProducts,\n    basket: basket,\n    CountBasket: CountBasket,\n    deleteSmart: deleteSmart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    basket: state.Reduser.basket,\n    countBasketProducts: state.Reduser.countBasketProducts\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getBasketThunk,\n  deleteInBasketThunk,\n  countBasketThunk,\n  CountBasketProducts\n}), withRouter)(BasketContainer);","map":{"version":3,"sources":["C:/Users/sqrt9/Desktop/react/projects/new-shop/src/Components/Basket/BasketContainer.js"],"names":["React","useEffect","useState","connect","compose","withRouter","Basket","CountBasketProducts","countBasketThunk","deleteInBasketThunk","getBasketThunk","BasketContainer","basket","countBasketProducts","Render","setRender","deleteSmart","id","delSmart","CountBasket","count","mapStateToProps","state","Reduser"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,mBAAR,EAA6BC,gBAA7B,EAA+CC,mBAA/C,EAAoEC,cAApE,QAAyF,qBAAzF;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAQH,EAAAA,mBAAR;AAA4BD,EAAAA,gBAA5B;AAA6CE,EAAAA,cAA7C;AAA4DG,EAAAA;AAA5D,CAAD,KAAsF;AAE1G,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMc,WAAW,GAAIC,EAAD,IAAQ;AACxB,UAAMC,QAAQ,GAAGN,MAAjB;AACAH,IAAAA,mBAAmB,CAACQ,EAAD,EAAKC,QAAL,CAAnB;AACH,GAHD;;AAKA,QAAMC,WAAW,GAAG,CAACF,EAAD,EAAKG,KAAL,KAAe;AAC/B,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACbJ,MAAAA,WAAW,CAACC,EAAD,CAAX;AACAF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAHD,MAGO;AACHP,MAAAA,gBAAgB,CAACS,EAAD,EAAKG,KAAL,CAAhB;AACAL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AAEJ,GATD;;AAUAd,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIa,MAAM,KAAK,IAAf,EAAqB;AACjBJ,MAAAA,cAAc;AACdK,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,GANQ,EAMN,CAACD,MAAD,EAAQJ,cAAR,CANM,CAAT;AAUA,sBAAO,oBAAC,MAAD;AAAQ,IAAA,mBAAmB,EAAEG,mBAA7B;AACQ,IAAA,MAAM,EAAED,MADhB;AAEQ,IAAA,WAAW,EAAEO,WAFrB;AAGQ,IAAA,WAAW,EAAEH,WAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAIH,CAjCD;;AAoCA,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHV,IAAAA,MAAM,EAAEU,KAAK,CAACC,OAAN,CAAcX,MADnB;AAEHC,IAAAA,mBAAmB,EAAES,KAAK,CAACC,OAAN,CAAcV;AAFhC,GAAP;AAIH,CALD;;AAOA,eAAeT,OAAO,CAClBD,OAAO,CAACkB,eAAD,EAAkB;AAACX,EAAAA,cAAD;AAAiBD,EAAAA,mBAAjB;AAAsCD,EAAAA,gBAAtC;AAAwDD,EAAAA;AAAxD,CAAlB,CADW,EAElBF,UAFkB,CAAP,CAGbM,eAHa,CAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Basket from \"./Basket\";\r\nimport {CountBasketProducts, countBasketThunk, deleteInBasketThunk, getBasketThunk} from \"../../Redux/Reduser\";\r\n\r\n\r\nconst BasketContainer = ({basket,deleteInBasketThunk,countBasketThunk,getBasketThunk,countBasketProducts}) => {\r\n\r\n    const [Render, setRender] = useState(true)\r\n\r\n    const deleteSmart = (id) => {\r\n        const delSmart = basket\r\n        deleteInBasketThunk(id, delSmart);\r\n    }\r\n\r\n    const CountBasket = (id, count) => {\r\n        if (count === 0) {\r\n            deleteSmart(id)\r\n            setRender(true)\r\n        } else {\r\n            countBasketThunk(id, count);\r\n            setRender(true)\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (Render === true) {\r\n            getBasketThunk();\r\n            setRender(false)\r\n        }\r\n    }, [Render,getBasketThunk]);\r\n\r\n\r\n\r\n    return <Basket countBasketProducts={countBasketProducts}\r\n                   basket={basket}\r\n                   CountBasket={CountBasket}\r\n                   deleteSmart={deleteSmart} />\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        basket: state.Reduser.basket,\r\n        countBasketProducts: state.Reduser.countBasketProducts\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getBasketThunk, deleteInBasketThunk, countBasketThunk, CountBasketProducts}),\r\n    withRouter\r\n)(BasketContainer)"]},"metadata":{},"sourceType":"module"}