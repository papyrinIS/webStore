{"ast":null,"code":"import { AppleAPI, XiaomiAPI } from \"../API/API\";\nconst SET_APPLE = \"SET_APPLE\";\nconst SET_XIAOMI = \"SET_XIAOMI\";\nlet initState = {\n  apple: [],\n  xiaomi: []\n};\n\nconst Reduser = (state = initState, action) => {\n  switch (action.type) {\n    case SET_APPLE:\n      {\n        return { ...state,\n          apple: action.apple\n        };\n      }\n\n    case SET_XIAOMI:\n      {\n        return { ...state,\n          xiaomi: action.xiaomi\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setApple = apple => ({\n  type: SET_APPLE,\n  apple\n});\nexport const setXiaomi = xiaomi => ({\n  type: SET_XIAOMI,\n  xiaomi\n});\nexport const getAppleThunk = () => async dispatch => {\n  let data = await AppleAPI.getApple();\n  dispatch(setApple(data));\n};\nexport const getXiaomiThunk = () => async dispatch => {\n  let data = await XiaomiAPI.getXiaomi();\n  dispatch(setXiaomi(data));\n};\nexport default Reduser;","map":{"version":3,"sources":["C:/Users/sqrt9/Desktop/react/projects/new-shop/src/Redux/Reduser.js"],"names":["AppleAPI","XiaomiAPI","SET_APPLE","SET_XIAOMI","initState","apple","xiaomi","Reduser","state","action","type","setApple","setXiaomi","getAppleThunk","dispatch","data","getApple","getXiaomiThunk","getXiaomi"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,YAAlC;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAGA,IAAIC,SAAS,GAAG;AACZC,EAAAA,KAAK,EAAE,EADK;AAEZC,EAAAA,MAAM,EAAE;AAFI,CAAhB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,SAAL;AAAgB;AACZ,eAAO,EACH,GAAGM,KADA;AAEHH,UAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFX,SAAP;AAIH;;AACD,SAAKF,UAAL;AAAiB;AACb,eAAO,EACH,GAAGK,KADA;AAEHF,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAFZ,SAAP;AAIH;;AACD;AACI,aAAOE,KAAP;AAdR;AAiBH,CAlBD;;AAoBA,OAAO,MAAMG,QAAQ,GAAIN,KAAD,KAAY;AAACK,EAAAA,IAAI,EAAER,SAAP;AAAkBG,EAAAA;AAAlB,CAAZ,CAAjB;AACP,OAAO,MAAMO,SAAS,GAAIN,MAAD,KAAa;AAACI,EAAAA,IAAI,EAAEP,UAAP;AAAmBG,EAAAA;AAAnB,CAAb,CAAlB;AAGP,OAAO,MAAMO,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAIC,IAAI,GAAG,MAAMf,QAAQ,CAACgB,QAAT,EAAjB;AACAF,EAAAA,QAAQ,CAACH,QAAQ,CAACI,IAAD,CAAT,CAAR;AACH,CAHM;AAIP,OAAO,MAAME,cAAc,GAAG,MAAM,MAAOH,QAAP,IAAoB;AACpD,MAAIC,IAAI,GAAG,MAAMd,SAAS,CAACiB,SAAV,EAAjB;AACAJ,EAAAA,QAAQ,CAACF,SAAS,CAACG,IAAD,CAAV,CAAR;AACH,CAHM;AAMP,eAAeR,OAAf","sourcesContent":["import {AppleAPI, XiaomiAPI} from \"../API/API\";\r\n\r\nconst SET_APPLE = \"SET_APPLE\"\r\nconst SET_XIAOMI = \"SET_XIAOMI\"\r\n\r\n\r\nlet initState = {\r\n    apple: [],\r\n    xiaomi: []\r\n}\r\n\r\n\r\nconst Reduser = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_APPLE: {\r\n            return {\r\n                ...state,\r\n                apple: action.apple\r\n            }\r\n        }\r\n        case SET_XIAOMI: {\r\n            return {\r\n                ...state,\r\n                xiaomi: action.xiaomi\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setApple = (apple) => ({type: SET_APPLE, apple})\r\nexport const setXiaomi = (xiaomi) => ({type: SET_XIAOMI, xiaomi})\r\n\r\n\r\nexport const getAppleThunk = () => async (dispatch) => {\r\n    let data = await AppleAPI.getApple();\r\n    dispatch(setApple(data))\r\n}\r\nexport const getXiaomiThunk = () => async (dispatch) => {\r\n    let data = await XiaomiAPI.getXiaomi();\r\n    dispatch(setXiaomi(data))\r\n}\r\n\r\n\r\nexport default Reduser;"]},"metadata":{},"sourceType":"module"}