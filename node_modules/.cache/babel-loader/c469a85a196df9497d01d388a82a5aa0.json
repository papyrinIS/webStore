{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sqrt9\\\\Desktop\\\\react\\\\projects\\\\new-shop\\\\src\\\\Components\\\\Basket\\\\BasketContainer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Basket from \"./Basket\";\nimport { CountBasketProducts, countBasketThunk, deleteInBasketThunk, getBasketThunk } from \"../../Redux/Reduser\";\n\nconst BasketContainer = props => {\n  const [Render, setRender] = useState(true);\n\n  const deleteSmart = id => {\n    const delSmart = props.basket;\n    props.deleteInBasketThunk(id, delSmart);\n  };\n\n  const CountBasket = (id, count) => {\n    if (count === 0) {\n      deleteSmart(id);\n      setRender(true);\n    } else {\n      props.countBasketThunk(id, count);\n      setRender(true);\n    }\n  };\n\n  let Price = props.basket.map(p => p.price);\n  let Count = props.basket.map(c => c.count);\n  let total = 0;\n\n  for (let i = 0; i < props.basket.length; i++) {\n    total = total + Price[i] * Count[i];\n  }\n\n  let countBasket = 0;\n\n  for (let i = 0; i < props.basket.length; i++) {\n    countBasket = countBasket + Count[i];\n  }\n\n  props.CountBasketProducts(countBasket);\n  useEffect(() => {\n    if (Render === true) {\n      props.getBasketThunk();\n      setRender(false);\n    }\n  }, [countBasketThunk, deleteInBasketThunk]);\n  return /*#__PURE__*/React.createElement(Basket, Object.assign({\n    total: total,\n    CountBasket: CountBasket,\n    deleteSmart: deleteSmart\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    basket: state.Reduser.basket,\n    countBasketProducts: state.Reduser.countBasketProducts\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getBasketThunk,\n  deleteInBasketThunk,\n  countBasketThunk,\n  CountBasketProducts\n}), withRouter)(BasketContainer);","map":{"version":3,"sources":["C:/Users/sqrt9/Desktop/react/projects/new-shop/src/Components/Basket/BasketContainer.js"],"names":["React","useEffect","useState","connect","compose","withRouter","Basket","CountBasketProducts","countBasketThunk","deleteInBasketThunk","getBasketThunk","BasketContainer","props","Render","setRender","deleteSmart","id","delSmart","basket","CountBasket","count","Price","map","p","price","Count","c","total","i","length","countBasket","mapStateToProps","state","Reduser","countBasketProducts"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Basket from \"./Basket\";\r\nimport {CountBasketProducts, countBasketThunk, deleteInBasketThunk, getBasketThunk} from \"../../Redux/Reduser\";\r\n\r\n\r\nconst BasketContainer = (props) => {\r\n\r\n    const [Render, setRender] = useState(true)\r\n\r\n    const deleteSmart = (id) => {\r\n        const delSmart = props.basket\r\n        props.deleteInBasketThunk(id, delSmart);\r\n    }\r\n\r\n    const CountBasket = (id, count) => {\r\n        if (count === 0) {\r\n            deleteSmart(id)\r\n            setRender(true)\r\n        } else {\r\n            props.countBasketThunk(id, count);\r\n            setRender(true)\r\n        }\r\n    }\r\n\r\n\r\n    let Price = props.basket.map(p => p.price);\r\n    let Count = props.basket.map(c => c.count);\r\n\r\n\r\n\r\n\r\n            let total = 0;\r\n            for (let i = 0; i < props.basket.length; i++) {\r\n                total = total + Price[i] * Count[i]\r\n            }\r\n\r\n        \r\n\r\n\r\n    let countBasket = 0;\r\n    for (let i = 0; i < props.basket.length; i++) {\r\n        countBasket = countBasket + Count[i]\r\n    }\r\n    props.CountBasketProducts(countBasket);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (Render === true){\r\n            props.getBasketThunk();\r\n            setRender(false)\r\n        }\r\n\r\n\r\n    }, [countBasketThunk, deleteInBasketThunk]);\r\n\r\n\r\n    return <Basket total={total} CountBasket={CountBasket} deleteSmart={deleteSmart} {...props}/>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        basket: state.Reduser.basket,\r\n        countBasketProducts: state.Reduser.countBasketProducts\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getBasketThunk, deleteInBasketThunk, countBasketThunk, CountBasketProducts}),\r\n    withRouter\r\n)(BasketContainer)"]},"metadata":{},"sourceType":"module"}