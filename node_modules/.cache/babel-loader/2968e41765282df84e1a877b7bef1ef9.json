{"ast":null,"code":"import { AppleAPI, XiaomiAPI } from \"../API/API\";\nconst SET_APPLE = \"SET_APPLE\";\nconst SET_XIAOMI = \"SET_XIAOMI\";\nconst SET_ONE_APPLE = \"SET_ONE_APPLE\";\nconst SET_ONE_XIAOMI = \"SET_ONE_XIAOMI\";\nlet initState = {\n  apple: [],\n  xiaomi: [],\n  oneApple: [],\n  oneXiaomi: []\n};\n\nconst Reduser = (state = initState, action) => {\n  switch (action.type) {\n    case SET_APPLE:\n      {\n        return { ...state,\n          apple: action.apple\n        };\n      }\n\n    case SET_XIAOMI:\n      {\n        return { ...state,\n          xiaomi: action.xiaomi\n        };\n      }\n\n    case SET_ONE_APPLE:\n      {\n        return { ...state,\n          oneApple: action.oneApple\n        };\n      }\n\n    case SET_ONE_XIAOMI:\n      {\n        return { ...state,\n          oneXiaomi: action.oneXiaomi\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setApple = apple => ({\n  type: SET_APPLE,\n  apple\n});\nexport const setXiaomi = xiaomi => ({\n  type: SET_XIAOMI,\n  xiaomi\n});\nexport const setOneApple = oneApple => ({\n  type: SET_ONE_APPLE,\n  oneApple\n});\nexport const setOneXiaomi = oneXiaomi => ({\n  type: SET_ONE_XIAOMI,\n  oneXiaomi\n});\nexport const getAppleThunk = () => async dispatch => {\n  let data = await AppleAPI.getApple();\n  dispatch(setApple(data));\n};\nexport const getOneAppleThunk = id => async dispatch => {\n  let data = await AppleAPI.getOneApple(id);\n  dispatch(setOneApple(data));\n};\nexport const getXiaomiThunk = () => async dispatch => {\n  let data = await XiaomiAPI.getXiaomi();\n  dispatch(setXiaomi(data));\n};\nexport const getOneXiaomiThunk = id => async dispatch => {\n  let data = await XiaomiAPI.getOneXiaomi(id);\n  dispatch(setOneXiaomi(data));\n};\nexport default Reduser;","map":{"version":3,"sources":["C:/Users/sqrt9/Desktop/react/projects/new-shop/src/Redux/Reduser.js"],"names":["AppleAPI","XiaomiAPI","SET_APPLE","SET_XIAOMI","SET_ONE_APPLE","SET_ONE_XIAOMI","initState","apple","xiaomi","oneApple","oneXiaomi","Reduser","state","action","type","setApple","setXiaomi","setOneApple","setOneXiaomi","getAppleThunk","dispatch","data","getApple","getOneAppleThunk","id","getOneApple","getXiaomiThunk","getXiaomi","getOneXiaomiThunk","getOneXiaomi"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,YAAlC;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,aAAa,GAAC,eAApB;AACA,MAAMC,cAAc,GAAC,gBAArB;AAGA,IAAIC,SAAS,GAAG;AACZC,EAAAA,KAAK,EAAE,EADK;AAEZC,EAAAA,MAAM,EAAE,EAFI;AAGZC,EAAAA,QAAQ,EAAC,EAHG;AAIZC,EAAAA,SAAS,EAAC;AAJE,CAAhB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,SAAT,EAAoBO,MAApB,KAA+B;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,SAAL;AAAgB;AACZ,eAAO,EACH,GAAGU,KADA;AAEHL,UAAAA,KAAK,EAAEM,MAAM,CAACN;AAFX,SAAP;AAIH;;AACD,SAAKJ,UAAL;AAAiB;AACb,eAAO,EACH,GAAGS,KADA;AAEHJ,UAAAA,MAAM,EAAEK,MAAM,CAACL;AAFZ,SAAP;AAIH;;AACD,SAAKJ,aAAL;AAAoB;AAChB,eAAO,EACH,GAAGQ,KADA;AAEHH,UAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAFd,SAAP;AAIH;;AACD,SAAKJ,cAAL;AAAqB;AACjB,eAAO,EACH,GAAGO,KADA;AAEHF,UAAAA,SAAS,EAAEG,MAAM,CAACH;AAFf,SAAP;AAIH;;AACD;AACI,aAAOE,KAAP;AA1BR;AA6BH,CA9BD;;AAgCA,OAAO,MAAMG,QAAQ,GAAIR,KAAD,KAAY;AAACO,EAAAA,IAAI,EAAEZ,SAAP;AAAkBK,EAAAA;AAAlB,CAAZ,CAAjB;AACP,OAAO,MAAMS,SAAS,GAAIR,MAAD,KAAa;AAACM,EAAAA,IAAI,EAAEX,UAAP;AAAmBK,EAAAA;AAAnB,CAAb,CAAlB;AACP,OAAO,MAAMS,WAAW,GAAIR,QAAD,KAAa;AAACK,EAAAA,IAAI,EAACV,aAAN;AAAoBK,EAAAA;AAApB,CAAb,CAApB;AACP,OAAO,MAAMS,YAAY,GAAER,SAAD,KAAc;AAACI,EAAAA,IAAI,EAACT,cAAN;AAAqBK,EAAAA;AAArB,CAAd,CAAnB;AAGP,OAAO,MAAMS,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAIC,IAAI,GAAG,MAAMrB,QAAQ,CAACsB,QAAT,EAAjB;AACAF,EAAAA,QAAQ,CAACL,QAAQ,CAACM,IAAD,CAAT,CAAR;AACH,CAHM;AAIP,OAAO,MAAME,gBAAgB,GAAIC,EAAD,IAAQ,MAAOJ,QAAP,IAAoB;AACxD,MAAIC,IAAI,GAAG,MAAMrB,QAAQ,CAACyB,WAAT,CAAqBD,EAArB,CAAjB;AACAJ,EAAAA,QAAQ,CAACH,WAAW,CAACI,IAAD,CAAZ,CAAR;AACH,CAHM;AAIP,OAAO,MAAMK,cAAc,GAAG,MAAM,MAAON,QAAP,IAAoB;AACpD,MAAIC,IAAI,GAAG,MAAMpB,SAAS,CAAC0B,SAAV,EAAjB;AACAP,EAAAA,QAAQ,CAACJ,SAAS,CAACK,IAAD,CAAV,CAAR;AACH,CAHM;AAKP,OAAO,MAAMO,iBAAiB,GAAIJ,EAAD,IAAQ,MAAOJ,QAAP,IAAoB;AACzD,MAAIC,IAAI,GAAG,MAAMpB,SAAS,CAAC4B,YAAV,CAAuBL,EAAvB,CAAjB;AACAJ,EAAAA,QAAQ,CAACF,YAAY,CAACG,IAAD,CAAb,CAAR;AACH,CAHM;AAMP,eAAeV,OAAf","sourcesContent":["import {AppleAPI, XiaomiAPI} from \"../API/API\";\r\n\r\nconst SET_APPLE = \"SET_APPLE\"\r\nconst SET_XIAOMI = \"SET_XIAOMI\"\r\nconst SET_ONE_APPLE=\"SET_ONE_APPLE\"\r\nconst SET_ONE_XIAOMI=\"SET_ONE_XIAOMI\"\r\n\r\n\r\nlet initState = {\r\n    apple: [],\r\n    xiaomi: [],\r\n    oneApple:[],\r\n    oneXiaomi:[]\r\n}\r\n\r\n\r\nconst Reduser = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_APPLE: {\r\n            return {\r\n                ...state,\r\n                apple: action.apple\r\n            }\r\n        }\r\n        case SET_XIAOMI: {\r\n            return {\r\n                ...state,\r\n                xiaomi: action.xiaomi\r\n            }\r\n        }\r\n        case SET_ONE_APPLE: {\r\n            return {\r\n                ...state,\r\n                oneApple: action.oneApple\r\n            }\r\n        }\r\n        case SET_ONE_XIAOMI: {\r\n            return {\r\n                ...state,\r\n                oneXiaomi: action.oneXiaomi\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setApple = (apple) => ({type: SET_APPLE, apple})\r\nexport const setXiaomi = (xiaomi) => ({type: SET_XIAOMI, xiaomi})\r\nexport const setOneApple = (oneApple)=>({type:SET_ONE_APPLE,oneApple})\r\nexport const setOneXiaomi=(oneXiaomi)=>({type:SET_ONE_XIAOMI,oneXiaomi})\r\n\r\n\r\nexport const getAppleThunk = () => async (dispatch) => {\r\n    let data = await AppleAPI.getApple();\r\n    dispatch(setApple(data))\r\n}\r\nexport const getOneAppleThunk = (id) => async (dispatch) => {\r\n    let data = await AppleAPI.getOneApple(id);\r\n    dispatch(setOneApple(data))\r\n}\r\nexport const getXiaomiThunk = () => async (dispatch) => {\r\n    let data = await XiaomiAPI.getXiaomi();\r\n    dispatch(setXiaomi(data))\r\n}\r\n\r\nexport const getOneXiaomiThunk = (id) => async (dispatch) => {\r\n    let data = await XiaomiAPI.getOneXiaomi(id);\r\n    dispatch(setOneXiaomi(data))\r\n}\r\n\r\n\r\nexport default Reduser;"]},"metadata":{},"sourceType":"module"}