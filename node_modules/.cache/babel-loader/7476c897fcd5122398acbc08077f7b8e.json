{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sqrt9\\\\Desktop\\\\react\\\\projects\\\\new-shop\\\\src\\\\Components\\\\Basket\\\\BasketContainer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Basket from \"./Basket\";\nimport { CountBasketProducts, countBasketThunk, deleteInBasketThunk, getBasketThunk } from \"../../Redux/Reduser\";\n\nconst BasketContainer = ({\n  basket,\n  deleteInBasketThunk,\n  countBasketThunk,\n  getBasketThunk,\n  countBasketProducts,\n  CountBasketProducts,\n  oneApple,\n  oneXiaomi,\n  description,\n  getOneXiaomiThunk,\n  getOneAppleThunk,\n  getDescriptionThunk,\n  match\n}) => {\n  const [Render, setRender] = useState(true);\n  let Price = basket.map(p => p.price);\n  let Count = basket.map(c => c.count);\n  let total = 0;\n\n  for (let i = 0; i < basket.length; i++) {\n    total = total + Price[i] * Count[i];\n  }\n\n  useEffect(() => {\n    let basketCount = 0;\n\n    for (let i = 0; i < basket.length; i++) {\n      basketCount += Count[i];\n    }\n\n    CountBasketProducts(basketCount);\n  });\n\n  const deleteSmart = id => {\n    const delSmart = basket;\n    deleteInBasketThunk(id, delSmart);\n  };\n\n  const CountBasket = (id, count) => {\n    if (count === 0) {\n      deleteSmart(id);\n      setRender(true);\n    } else {\n      countBasketThunk(id, count);\n      setRender(true);\n    }\n  };\n\n  useEffect(() => {\n    if (Render === true) {\n      getBasketThunk();\n      setRender(false);\n    }\n  }, [Render, getBasketThunk]);\n  useEffect(() => {\n    let id = match.params.id;\n\n    if (id >= 10) {\n      getOneXiaomiThunk(id);\n    }\n  }, [getOneXiaomiThunk, match.params.id]);\n  useEffect(() => {\n    let id = match.params.id;\n\n    if (id < 10) {\n      getOneAppleThunk(id);\n    }\n  }, [getOneAppleThunk, match.params.id]);\n  return /*#__PURE__*/React.createElement(Basket, {\n    countBasketProducts: countBasketProducts,\n    basket: basket,\n    total: total,\n    CountBasket: CountBasket,\n    CountBasketProducts: CountBasketProducts,\n    deleteSmart: deleteSmart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    basket: state.Reduser.basket,\n    countBasketProducts: state.Reduser.countBasketProducts\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getBasketThunk,\n  deleteInBasketThunk,\n  countBasketThunk,\n  CountBasketProducts\n}), withRouter)(BasketContainer);","map":{"version":3,"sources":["C:/Users/sqrt9/Desktop/react/projects/new-shop/src/Components/Basket/BasketContainer.js"],"names":["React","useEffect","useState","connect","compose","withRouter","Basket","CountBasketProducts","countBasketThunk","deleteInBasketThunk","getBasketThunk","BasketContainer","basket","countBasketProducts","oneApple","oneXiaomi","description","getOneXiaomiThunk","getOneAppleThunk","getDescriptionThunk","match","Render","setRender","Price","map","p","price","Count","c","count","total","i","length","basketCount","deleteSmart","id","delSmart","CountBasket","params","mapStateToProps","state","Reduser"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Basket from \"./Basket\";\r\nimport {CountBasketProducts, countBasketThunk, deleteInBasketThunk, getBasketThunk} from \"../../Redux/Reduser\";\r\n\r\n\r\nconst BasketContainer = ({basket,deleteInBasketThunk,countBasketThunk,getBasketThunk,countBasketProducts,CountBasketProducts,\r\n                             oneApple,oneXiaomi,description,getOneXiaomiThunk,getOneAppleThunk,\r\n                             getDescriptionThunk,match,}) => {\r\n\r\n    const [Render, setRender] = useState(true)\r\n\r\n    let Price = basket.map(p => p.price);\r\n    let Count = basket.map(c => c.count);\r\n    let total = 0;\r\n    for (let i = 0; i < basket.length; i++) {\r\n        total = total + Price[i] * Count[i]\r\n    }\r\n\r\n    useEffect(() => {\r\n        let basketCount = 0\r\n        for (let i = 0; i < basket.length; i++) {\r\n            basketCount += Count[i]\r\n        }\r\n        CountBasketProducts(basketCount);\r\n\r\n    })\r\n\r\n\r\n    const deleteSmart = (id) => {\r\n        const delSmart = basket\r\n        deleteInBasketThunk(id, delSmart);\r\n    }\r\n\r\n    const CountBasket = (id, count) => {\r\n        if (count === 0) {\r\n            deleteSmart(id)\r\n            setRender(true)\r\n        } else {\r\n            countBasketThunk(id, count);\r\n            setRender(true)\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (Render === true) {\r\n            getBasketThunk();\r\n            setRender(false)\r\n        }\r\n    }, [Render,getBasketThunk]);\r\n\r\n\r\n    useEffect(()=>{\r\n        let id=match.params.id;\r\n        if(id>=10) {\r\n            getOneXiaomiThunk(id);\r\n        }\r\n    },[getOneXiaomiThunk,match.params.id])\r\n\r\n\r\n    useEffect(()=>{\r\n        let id = match.params.id;\r\n        if(id<10) {\r\n            getOneAppleThunk(id);\r\n        }\r\n    },[getOneAppleThunk,match.params.id])\r\n\r\n\r\n\r\n    return <Basket countBasketProducts={countBasketProducts}\r\n                   basket={basket}\r\n                   total={total}\r\n                   CountBasket={CountBasket}\r\n                   CountBasketProducts={CountBasketProducts}\r\n                   deleteSmart={deleteSmart} />\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        basket: state.Reduser.basket,\r\n        countBasketProducts: state.Reduser.countBasketProducts\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getBasketThunk, deleteInBasketThunk, countBasketThunk, CountBasketProducts}),\r\n    withRouter\r\n)(BasketContainer)"]},"metadata":{},"sourceType":"module"}