{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sqrt9\\\\Desktop\\\\react\\\\projects\\\\new-shop\\\\src\\\\AppContainer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { countBasket, CountBasketProducts, getAppleThunk, getBasketThunk, getXiaomiThunk } from \"./Redux/Reduser\";\nimport App from \"./App\";\n\nconst AppContainer = ({\n  getAppleThunk,\n  getXiaomiThunk,\n  basket,\n  CountBasketProducts,\n  getBasketThunk\n}) => {\n  const [Render, setRender] = useState(true);\n  useEffect(() => {\n    getAppleThunk();\n  }, [getAppleThunk]);\n  useEffect(() => {\n    getXiaomiThunk();\n  }, [getXiaomiThunk]);\n  let Count = basket.map(c => c.count);\n  let countBasket = 0;\n\n  for (let i = 0; i < basket.length; i++) {\n    countBasket = countBasket + Count[i];\n  }\n\n  CountBasketProducts(countBasket);\n  useEffect(() => {\n    if (Render === true) {\n      getBasketThunk();\n      setRender(false);\n    }\n  }, [AppContainer, Render, getBasketThunk]);\n  return /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    apple: state.Reduser.apple,\n    xiaomi: state.Reduser.xiaomi,\n    basket: state.Reduser.basket,\n    countBasketProducts: state.Reduser.countBasketProducts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAppleThunk,\n  getXiaomiThunk,\n  CountBasketProducts,\n  getBasketThunk\n})(AppContainer);","map":{"version":3,"sources":["C:/Users/sqrt9/Desktop/react/projects/new-shop/src/AppContainer.js"],"names":["React","useEffect","useState","connect","countBasket","CountBasketProducts","getAppleThunk","getBasketThunk","getXiaomiThunk","App","AppContainer","basket","Render","setRender","Count","map","c","count","i","length","mapStateToProps","state","apple","Reduser","xiaomi","countBasketProducts"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,WADJ,EAEIC,mBAFJ,EAGIC,aAHJ,EAGmBC,cAHnB,EAIIC,cAJJ,QAKO,iBALP;AAMA,OAAOC,GAAP,MAAgB,OAAhB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACJ,EAAAA,aAAD;AAAeE,EAAAA,cAAf;AAA8BG,EAAAA,MAA9B;AAAqCN,EAAAA,mBAArC;AAAyDE,EAAAA;AAAzD,CAAD,KAA8E;AAE/F,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,aAAa;AAChB,GAFQ,EAEP,CAACA,aAAD,CAFO,CAAT;AAGAL,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,cAAc;AACjB,GAFQ,EAEP,CAAEA,cAAF,CAFO,CAAT;AAMI,MAAIM,KAAK,GAAGH,MAAM,CAACI,GAAP,CAAWC,CAAC,IAAIA,CAAC,CAACC,KAAlB,CAAZ;AAEJ,MAAIb,WAAW,GAAG,CAAlB;;AACA,OAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAAM,CAACQ,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCd,IAAAA,WAAW,GAAGA,WAAW,GAAGU,KAAK,CAACI,CAAD,CAAjC;AACH;;AACDb,EAAAA,mBAAmB,CAACD,WAAD,CAAnB;AAKAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,MAAM,KAAK,IAAf,EAAqB;AACjBL,MAAAA,cAAc;AACdM,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AAEJ,GANQ,EAMN,CAACH,YAAD,EAAcE,MAAd,EAAqBL,cAArB,CANM,CAAT;AAQA,sBAAM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN;AACH,CAhCD;;AAoCA,MAAMa,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcD,KADlB;AAEHE,IAAAA,MAAM,EAAEH,KAAK,CAACE,OAAN,CAAcC,MAFnB;AAGHb,IAAAA,MAAM,EAACU,KAAK,CAACE,OAAN,CAAcZ,MAHlB;AAIHc,IAAAA,mBAAmB,EAACJ,KAAK,CAACE,OAAN,CAAcE;AAJ/B,GAAP;AAOH,CARD;;AAUA,eAAetB,OAAO,CAACiB,eAAD,EAAiB;AAACd,EAAAA,aAAD;AAAeE,EAAAA,cAAf;AAA8BH,EAAAA,mBAA9B;AAAkDE,EAAAA;AAAlD,CAAjB,CAAP,CAA2FG,YAA3F,CAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    countBasket,\r\n    CountBasketProducts,\r\n    getAppleThunk, getBasketThunk,\r\n    getXiaomiThunk\r\n} from \"./Redux/Reduser\";\r\nimport App from \"./App\";\r\n\r\n\r\nconst AppContainer = ({getAppleThunk,getXiaomiThunk,basket,CountBasketProducts,getBasketThunk}) => {\r\n\r\n    const [Render, setRender] = useState(true)\r\n    useEffect(()=>{\r\n        getAppleThunk();\r\n    },[getAppleThunk])\r\n    useEffect(()=>{\r\n        getXiaomiThunk();\r\n    },[ getXiaomiThunk])\r\n\r\n\r\n\r\n        let Count = basket.map(c => c.count);\r\n\r\n    let countBasket = 0;\r\n    for (let i = 0; i < basket.length; i++) {\r\n        countBasket = countBasket + Count[i]\r\n    }\r\n    CountBasketProducts(countBasket);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (Render === true) {\r\n            getBasketThunk();\r\n            setRender(false)\r\n        }\r\n\r\n    }, [AppContainer,Render,getBasketThunk]);\r\n\r\n    return<App />\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        apple: state.Reduser.apple,\r\n        xiaomi: state.Reduser.xiaomi,\r\n        basket:state.Reduser.basket,\r\n        countBasketProducts:state.Reduser.countBasketProducts\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{getAppleThunk,getXiaomiThunk,CountBasketProducts,getBasketThunk})(AppContainer)"]},"metadata":{},"sourceType":"module"}